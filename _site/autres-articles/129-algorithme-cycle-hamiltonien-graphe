<!DOCTYPE html>
<html lang="en-gb" dir="ltr">
<head>
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta charset="utf-8" />
	<base href="https://blog.neamar.fr" />
	<meta name="keywords" content="graphe, cycle hamiltonien" />
	<meta name="author" content="Neamar" />
	<meta name="description" content="Distributeur de liens !" />
	<meta name="generator" content="Joomla! - Open Source Content Management" />
	<title>Trouver un cycle hamiltonien sur un graphe</title>
	<link href="https://blog.neamar.fr/autres-articles/129-algorithme-cycle-hamiltonien-graphe" rel="canonical" />
	<link href="/templates/protostar/favicon.ico" rel="shortcut icon" type="image/vnd.microsoft.icon" />
	<link href="/templates/protostar/css/template.css?4847224b99c9894da868618d8285f3c1" rel="stylesheet" />
	<link href="//fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet" />
	<style>

	h1, h2, h3, h4, h5, h6, .site-title {
		font-family: 'Open Sans', sans-serif;
	}
	body.site {
		border-top: 3px solid #0088cc;
		background-color: #f4f6f7;
	}
	a {
		color: #0088cc;
	}
	.nav-list > .active > a,
	.nav-list > .active > a:hover,
	.dropdown-menu li > a:hover,
	.dropdown-menu .active > a,
	.dropdown-menu .active > a:hover,
	.nav-pills > .active > a,
	.nav-pills > .active > a:hover,
	.btn-primary {
		background: #0088cc;
	}
	</style>
	<script src="/media/jui/js/jquery.min.js"></script>
	<script src="/media/jui/js/jquery-noconflict.js"></script>
	<script src="/media/jui/js/jquery-migrate.min.js"></script>
	<script src="/media/system/js/caption.js"></script>
	<script src="/media/jui/js/bootstrap.min.js"></script>
	<script src="/templates/protostar/js/template.js?4847224b99c9894da868618d8285f3c1"></script>
	<script>
jQuery(window).on('load',  function() {
				new JCaption('img.caption');
			});jQuery(function($){ $(".hasTooltip").tooltip({"html": true,"container": "body"}); });
	</script>

	<!--[if lt IE 9]><script src="/media/jui/js/html5.js"></script><![endif]-->
</head>
<body class="site com_content view-article no-layout no-task itemid-103">
	<!-- Body -->
	<div class="body">
		<div class="container">
			<!-- Header -->
			<header class="header" role="banner">
				<div class="header-inner clearfix">
					<a class="brand pull-left" href="/">
						<span class="site-title" title="Blog de Neamar">Blog de Neamar</span>											</a>
					<div class="header-search pull-right">
						
					</div>
				</div>
			</header>
						
			<div class="row-fluid">
								<main id="content" role="main" class="span9">
					<!-- Begin Content -->
					
					<div id="system-message-container">
	</div>

					<div class="item-page" itemscope itemtype="https://schema.org/Article">
	<meta itemprop="inLanguage" content="en-GB" />
	
		
			<div class="page-header">
					<h2 itemprop="headline">
				Trouver un cycle hamiltonien sur un graphe			</h2>
									</div>
							
<div class="icons">
	
					<div class="btn-group pull-right">
				<a class="btn dropdown-toggle" data-toggle="dropdown" href="#"> <span class="icon-cog"></span><span class="caret"></span> </a>
								<ul class="dropdown-menu">
																<li class="email-icon"> <a href="/component/mailto/?tmpl=component&amp;template=protostar&amp;link=c039d2bbfe3613f29ff6e59d68b8f5ef41c93e90" title="Email this link to a friend" onclick="window.open(this.href,'win2','width=400,height=350,menubar=yes,resizable=yes'); return false;" rel="nofollow"><span class="icon-envelope"></span>Email</a> </li>
														</ul>
			</div>
		
	</div>
			
				<dl class="article-info muted">

		
			<dt class="article-info-term">
									Details							</dt>

							<dd class="createdby" itemprop="author" itemscope itemtype="https://schema.org/Person">
					Written by <span itemprop="name">Neamar</span>	</dd>
			
			
										<dd class="category-name">
													Category: <span itemprop="genre">Articles du blog</span>							</dd>			
					
												<dd class="create">
					<span class="icon-calendar"></span>
					<time datetime="2010-06-08T19:49:31+00:00" itemprop="dateCreated">
						Created: 08 June 2010					</time>
			</dd>			
										<dd class="modified">
				<span class="icon-calendar"></span>
				<time datetime="2013-08-06T23:18:27+00:00" itemprop="dateModified">
					Last Updated: 06 August 2013				</time>
			</dd>			
						</dl>
	
	
				
								<div itemprop="articleBody">
		<p><em>Ce blog carbure actuellement à un rythme délirant, mais ne vous inquiétez pas ça va se calmer. D'abord, parce que j'en ai marre d'écrire en permanence, et ensuite parce qu'Icosien approche de la sortie !</em></p>

<p>Un peu de rôlisme. <br />
Vous êtes un voyageur de commerce, et votre patron vous a donné une liste de 15&nbsp;villes à démarcher. <br />
Renseignements pris, toutes les villes ne sont pas vraiment reliées entre elles&nbsp;: les avions n'assurent que certaines liaisons. </p>

<p>Voici le schéma obtenu (il s'agit d'un <a href="http://mathworld.wolfram.com/Dodecahedron.html">dodécahédron</a> issu de mathworld)&nbsp;: </p>

<p><img src="/images/stories/Prog/EulrisGraphe/Hamilton/DodecahedralGraph.gif" alt="Graphe du voyageur" title="Graphe du voyageur" style="background-color:white;"></p>

<p>En rouge se trouvent les villes à visiter, et en noir les liaisons possibles. Vous partez de votre ville de départ, et le but sera de visiter une ville par jour sans revenir deux fois dans la même ville, tout en finissant le vingtième et dernier jour dans votre ville de départ – après tout, c'est là que vous vivez. </p>

<p>Je vous laisse réfléchir au chemin que vous prendriez… et dans la suite, nous verrons comment résoudre algorithmiquement ce problème&nbsp;! </p>

 
<h2>Présentation du problème</h2>
<p>Les contraintes posées (passer une fois par chaque ville en utilisant les arêtes, finir au point de départ) sont la définition d'un <a href="http://mathworld.wolfram.com/HamiltonianCycle.html">cycle hamiltonien</a>. </p>

<p>Algorithmiquement, la recherche d'un cycle hamiltonien est NP-complet&nbsp;: c'est-à-dire qu'on ne connaît pas d'algorithme plus efficace qu'une <em>brute force</em>. <br />
Certes, on peut raffiner légèrement, mais la complexité algorithmique restera exponentielle… et pourtant, les cycles hamiltoniens ont de multiples utilités&nbsp;: par exemple, pour rechercher le cycle le plus long sur un graphe (un chemin hamiltonien, passant par tous les nœuds, est forcément le plus long&nbsp;! ) ce qui peut être utile dans la reconnaissance d'images. </p>

<p>Mais attention, NP-complet ne signifie pas forcément algorithme complexe&nbsp;! Au contraire même, puisque NP-complet est à peu près correspondant à une brute-force, les algorithmes ont tendance à être extrêmement simples… mais aussi extrêmement long en temps de calcul. </p>

<p>Ce qui est intéressant dans ce cas, c'est qu'on peut résoudre le problème en une quinzaine de lignes avec une méthode récursive. Mieux encore, on n'a pas besoin de faire de copies d'objets (qui est souvent un point long des algorithmes récursifs)&nbsp;: on peut travailler avec un simple pointeur, ce qui va énormément accélérer les choses. </p>

<h2>Structure utilisée</h2>
<p>Première chose à faire, définir la structure avec laquelle on veut travailler. On a <a href="http://fr.wikipedia.org/wiki/Th%C3%A9orie_des_graphes#Aspect_algorithmique">le choix</a>&nbsp;! <br />
Je vais prendre la structure «&nbsp;simple&nbsp;»&nbsp;: un tableau dont les clés correspondent aux nœuds, et les valeurs aux nœuds accessibles depuis le nœud-clé. </p>

<p>Par exemple, pour ce graphe&nbsp;: <br />
<img src="/images/stories/Prog/EulrisGraphe/Hamilton/GrapheExemple.png" alt="Graphe d'exemple" title="Graphe d'exemple" style="background-color:white;"></p>

<p>Notre tableau aura la forme suivante&nbsp;: </p>

<pre>
[1] =&gt; 2,5
[2] =&gt; 1,3,5
[3] =&gt; 2,4
[4] =&gt; 3,5,6
[5] =&gt; 1,2,4
[6] =&gt; 4
</pre>

<p>Il est bien évident que ce graphe n'a pas de cycle hamiltonien&nbsp;: il est impossible de partir du 6&nbsp;sans rejoindre 4, et il est impossible de rejoindre 6&nbsp;sans passer par 4… </p>


<h2>Codage du graphe</h2>
<p>Utilisant ce système, on en déduit le tableau suivant pour notre graphe de voyage&nbsp;: </p>

<pre>
[0]=&gt;1,4,5
[1]=&gt;0,2,6
[2]=&gt;1,3,7
[3]=&gt;2,4,8
[4]=&gt;3,0,9
[5]=&gt;0,14,10
[6]=&gt;1,10,11
[7]=&gt;2,11,12
[8]=&gt;3,12,13
[9]=&gt;4,13,14
[10]=&gt;5,6,15
[11]=&gt;6,7,16
[12]=&gt;7,8,17
[13]=&gt;9,8,18
[14]=&gt;9,5,19
[15]=&gt;10,19,16
[16]=&gt;11,15,17
[17]=&gt;12,16,18
[18]=&gt;13,17,19
[19]=&gt;14,15,18
</pre>

<p>Le nœud 0&nbsp;correspond au point en haut, puis on tourne sur l'enveloppe externe pour obtenir 1, puis 2, 3&nbsp;et 4. Cercle intérieur ensuite&nbsp;: 5 à 9, et ainsi de suite en réduisant les cercles. </p>

<h2>Codage du problème</h2>
<p>Que va-t-on faire&nbsp;? Tout d'abord, prendre un point de départ. Si vous demandez lequel, vous venez de passer pour un idiot&nbsp;: on cherche un cycle je vous le rappelle. Me demanderiez-vous comment commencer un cercle&nbsp;? <br />
Donc on prend le premier qui nous vient sous la main, l'élément d'index 0 (à noter&nbsp;: contrairement à l'exemple précédent, on a un nœud d'index 0). </p>

<p>Ensuite, on récupère la liste des destinations disponibles depuis 0. <br />
Puis on supprime 0&nbsp;de la liste des nœuds (on n'a pas le droit d'y revenir), et on rappelle la fonction pour chacune des destinations avec le graphe nouvellement créé. </p>

<p>Ici, le premier appel se fera sur l'index 1. <br />
On récupère la liste des itinéraires disponibles depuis 1, et on cherche un chemin dans cet itinéraire. </p>

<p>Et ainsi de suite récursivement… </p>

<p>Comment savoir quand on s'arrête&nbsp;? Quand on a parcouru autant de nœuds qu'il y en a dans le graphe, et que le dernier nœud a un chemin d'accès vers l'élément 0 (pour boucler). <br />
Sinon, on continue de chercher des itinéraires… <br />
Expliquer un algorithme récursif n'est jamais facile, et je vous conseille de lire le code qui devrait clarifier la chose&nbsp;: </p>

<pre xml:lang="actionscript3">
/**
* Trouve un cycle Hamiltonien (s'il existe !) dans le graphe passé en paramètres.
* Se base sur un algorithme récursif.
* Prend en paramètre une liste de noeuds, tel que Noeuds[i] contienne tous les noeuds liés à i.
* @param Noeuds:Vector.<Vector.<int>> la liste des points composant le niveau. Typé comme array car les vector ne sont pas sparse.
* @param Actuel le noeud sur lequel on est actuellement placé. Non spécifié au premier appel.
* @param LongueurCycle la longueur du cycle actuelle. Si longueur == noeuds.length, c'est fini :)
* @return true si un cycle a été trouvé, false sinon.
*/
private function solveHamiltonian(Noeuds:Array,Actuel:int=0,LongueurCycle:int=0):Boolean
{
	//Récupérer la liste des itinéraires possibles depuis le noeud Actuel.
	var Possibilites:Vector.<int> = Noeuds[Actuel];
	//Supprimer ce noeud de la liste (pour qu'on ne le reprenne pas)
	Noeuds[Actuel] = null;

	//Examiner chacun des itinéraires disponibles depuis ce noeud.
	for each(var Possibilite:int in Possibilites)
	{
		//Si :
		// - on a la longueur d'un cycle, et on peut rejoindre 0 (le point de départ)
		// - le noeud n'a pas encore été pris, et qu'on peut trouver un chemin hamiltonien dessus :
		if((LongueurCycle==Noeuds.length-1 && Possibilite == 0) ||
			(Noeuds[Possibilite]!=null && solveHamiltonian(Noeuds,Possibilite,LongueurCycle+1)))
		{
			//Chemin trouvé !
			trace("Trouvé : " + Actuel);
			return true;
		}
	}

	//Sinon, aucun chemin hamiltonien ne passe par cette combinaison. Remettre le tableau dans son état initial, puis quitter et revenir à la fonction précédente.
	Noeuds[Actuel] = Possibilites;
	return false;
}
</pre>

<p>Et notre résultat&nbsp;: </p>
<pre>
Trouvé : 5
Trouvé : 14
Trouvé : 19
Trouvé : 18
Trouvé : 17
Trouvé : 16
Trouvé : 15
Trouvé : 10
Trouvé : 6
Trouvé : 11
Trouvé : 7
Trouvé : 12
Trouvé : 8
Trouvé : 13
Trouvé : 9
Trouvé : 4
Trouvé : 3
Trouvé : 2
Trouvé : 1
Trouvé : 0
</pre>

<p>Pour ceux qui voudraient en savoir plus sur les graphes hamiltoniens : <a href="http://webdocs.cs.ualberta.ca/~joe/Theses/vandegriend.html">vous pouvez lire cette thèse</a>.</p>
<p>Pour les visuels (et aussi pour vous féliciter d'avoir suivi cet article) voici le résultat :<br />
<img src="/images/stories/Prog/EulrisGraphe/Hamilton/Hamiltonien.png" alt="Circuit hamiltonien du dodécahédron" title="Graphe d'exemple">	</div>

	
							</div>

					
<ul itemscope itemtype="https://schema.org/BreadcrumbList" class="breadcrumb">
			<li>
			You are here: &#160;
		</li>
	
				<li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
									<a itemprop="item" href="/" class="pathway"><span itemprop="name">Home</span></a>
				
									<span class="divider">
						<img src="/media/system/images/arrow.png" alt="" />					</span>
								<meta itemprop="position" content="1">
			</li>
					<li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
									<a itemprop="item" href="/autres-articles" class="pathway"><span itemprop="name">Articles du blog</span></a>
				
									<span class="divider">
						<img src="/media/system/images/arrow.png" alt="" />					</span>
								<meta itemprop="position" content="2">
			</li>
					<li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem" class="active">
				<span itemprop="name">
					Trouver un cycle hamiltonien sur un graphe				</span>
				<meta itemprop="position" content="3">
			</li>
		</ul>

					<!-- End Content -->
				</main>
									<div id="aside" class="span3">
						<!-- Begin Right Sidebar -->
						<div class="well _menu"><h3 class="page-header">Main Menu</h3><ul class="nav menu">
<li class="item-104 default"><a href="/" >Blog de Neamar</a></li><li class="item-103 current active"><a href="/autres-articles" >Articles du blog</a></li><li class="item-105"><a href="/les-liens-du-jeudi" >Les liens du jeudi</a></li></ul>
</div>
						<!-- End Right Sidebar -->
					</div>
							</div>
		</div>
	</div>
	<!-- Footer -->
	<footer class="footer" role="contentinfo">
		<div class="container">
			<hr />
			
			<p class="pull-right">
				<a href="#" id="back-top">
					Back to Top				</a>
			</p>
			<p>
				&copy; 2024 Blog de Neamar			</p>
		</div>
	</footer>
	
</body>
</html>
