<!DOCTYPE html>
<html lang="en-gb" dir="ltr">
<head>
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta charset="utf-8" />
	<base href="https://blog.neamar.fr" />
	<meta name="keywords" content="array, as3, ArrayPlus, actionscript3, flash, actionscript 3, action script 3" />
	<meta name="author" content="Neamar" />
	<meta name="description" content="Distributeur de liens !" />
	<meta name="generator" content="Joomla! - Open Source Content Management" />
	<title>Améliorer la classe Array en AS3</title>
	<link href="https://blog.neamar.fr/autres-articles/45-array-remove-action-script-3" rel="canonical" />
	<link href="/templates/protostar/favicon.ico" rel="shortcut icon" type="image/vnd.microsoft.icon" />
	<link href="/templates/protostar/css/template.css" rel="stylesheet" />
	<link href="//fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet" />
	<style>

	h1, h2, h3, h4, h5, h6, .site-title {
		font-family: 'Open Sans', sans-serif;
	}
	body.site {
		border-top: 3px solid #0088cc;
		background-color: #f4f6f7;
	}
	a {
		color: #0088cc;
	}
	.nav-list > .active > a,
	.nav-list > .active > a:hover,
	.dropdown-menu li > a:hover,
	.dropdown-menu .active > a,
	.dropdown-menu .active > a:hover,
	.nav-pills > .active > a,
	.nav-pills > .active > a:hover,
	.btn-primary {
		background: #0088cc;
	}
	</style>
	<script src="/media/jui/js/jquery.min.js"></script>
	<script src="/media/jui/js/jquery-noconflict.js"></script>
	<script src="/media/jui/js/jquery-migrate.min.js"></script>
	<script src="/media/system/js/caption.js"></script>
	<script src="/media/jui/js/bootstrap.min.js"></script>
	<script src="/templates/protostar/js/template.js"></script>
	<script>
jQuery(window).on('load',  function() {
				new JCaption('img.caption');
			});
jQuery(function($){ $(".hasTooltip").tooltip({"html": true,"container": "body"}); });
	</script>

	<!--[if lt IE 9]><script src="/media/jui/js/html5.js"></script><![endif]-->
</head>
<body class="site com_content view-article no-layout no-task itemid-103">
	<!-- Body -->
	<div class="body">
		<div class="container">
			<!-- Header -->
			<header class="header" role="banner">
				<div class="header-inner clearfix">
					<a class="brand pull-left" href="/">
						<span class="site-title" title="Blog de Neamar">Blog de Neamar</span>											</a>
					<div class="header-search pull-right">

					</div>
				</div>
			</header>

			<div class="row-fluid">
								<main id="content" role="main" class="span9">
					<!-- Begin Content -->

					<div id="system-message-container">
	</div>

					<div class="item-page" itemscope itemtype="https://schema.org/Article">
	<meta itemprop="inLanguage" content="en-GB" />


			<div class="page-header">
					<h2 itemprop="headline">
				Améliorer la classe Array en AS3			</h2>
									</div>

<div class="icons">

					<div class="btn-group pull-right">
				<a class="btn dropdown-toggle" data-toggle="dropdown" href="#"> <span class="icon-cog"></span><span class="caret"></span> </a>
								<ul class="dropdown-menu">
																<li class="email-icon"> <a href="/component/mailto/?tmpl=component&amp;template=protostar&amp;link=e0ee5e0300dce7701f71871d35aa773d1b31a580" title="Email this link to a friend" onclick="window.open(this.href,'win2','width=400,height=350,menubar=yes,resizable=yes'); return false;" rel="nofollow"><span class="icon-envelope"></span>Email</a> </li>
														</ul>
			</div>

	</div>

				<dl class="article-info muted">


			<dt class="article-info-term">
									Details							</dt>

							<dd class="createdby" itemprop="author" itemscope itemtype="https://schema.org/Person">
					Written by <span itemprop="name">Neamar</span>	</dd>


										<dd class="category-name">
													Category: <span itemprop="genre">Articles du blog</span>							</dd>

												<dd class="create">
					<span class="icon-calendar"></span>
					<time datetime="2009-11-19T20:02:29+00:00" itemprop="dateCreated">
						Created: 19 November 2009					</time>
			</dd>
										<dd class="modified">
				<span class="icon-calendar"></span>
				<time datetime="2013-08-06T23:18:27+00:00" itemprop="dateModified">
					Last Updated: 06 August 2013				</time>
			</dd>
						</dl>



								<div itemprop="articleBody">
		<p>Si vous faites un peu de programmation Flash en AS3, vous aurez remarqué que la classe <tt>Array</tt>, certes bien fournie, n'est pas parfaite : certaines opérations de base ne sont pas intégrées dedans, ce qui oblige à recoder à chaque fois des fonctionnalités aussi simples que la suppression d'un élément ou son clonage.</p>

<p>En fait, on peut faire mieux : en créant une classe qui hérite de <tt>Array</tt>, on peut ajouter toutes les méthodes nécessaires. La seule restriction étant qu'on ne peut plus utiliser la syntaxe des crochets pour déclarer un nouvel élément (comme <tt>[1,2,3]</tt>).<br />
Dans mon cas j'ai nommé cette classe <tt>ArrayPlus</tt>, le code est juste en-dessous.</p>


<p>Fonctionnalité d'ArrayPlus :</p>
<ul>
<li>Reprise de la quasi totalité des fonctions de la classe <tt>Array</tt> de base&nbsp;;</li>
<li><tt>uniquePush(item:*):void</tt> : ajoute un item uniquement s'il n'est pas déjà présent dans le tableau&nbsp;;</li>
<li><tt>clone():ArrayPlus</tt> : renvoie une copie de l'objet. Attention, seul le tableau est cloné, pas le contenu des cellules qui continuent de pointer vers le même objet ;</li>
<li><tt>contains(item:*):Boolean</tt> : renvoie true si l'objet passé en paramètre se trouve dans le tableau&nbsp;;</li>
<li><tt>remove(item:*):void</tt> : la fonction la plus utile ! Supprime l'objet du tableau, lance une erreur s'il n'existe pas&nbsp;;</li>
<li><tt>replace(search:*,replace:*):void</tt> : remplace la première occurrence de <tt>search</tt> par <tt>replace</tt>. Si search n'est pas trouvé, une erreur est générée.</li>
<li><tt>swap(item:*,item2:*)</tt> : inverse la position de deux éléments dans le tableau&nbsp;;</li>
<li><tt>static concat(a:ArrayPlus,b:ArrayPlus):ArrayPlus</tt> : renvoie un ArrayPlus composé de l'intégralité des éléments de <tt>a</tt> et de <tt>b</tt>&nbsp;;</li>
<li><tt>static dictionary2Array(d:DictionaryPlus):ArrayPlus</tt> : transforme un <tt>ArrayPlus</tt> en <tt>DictionaryPlus</tt>. Si vous n'utilisez pas <tt>DictionaryPlus</tt>, vous pouvez le remplacer par un simple <tt>Dictionary</tt>.</li>
</ul>

<h2>ArrayPlus.as</h2>
<pre xml:lang="actionscript3">
/**
 * ARRAYPLUS || Neamar
 * La classe ArrayPlus tente de pallier aux déficits de la classe Array interne à ActionScript.
 * Elle apporte plusieurs méthodes utiles, parmi lesquelles :
 * - uniquePush qui insère l'élément s'il n'est pas encore dans le tableau.
 * - clone qui renvoie un clone de l'objet ;
 * - contains qui vaut true si l'item spécifié en paramètre est présent dans le tableau
 * - remove supprimer l'élement
 * - swap échange l'ordre de deux élements
 *
 * Cette classe présente l'avantage d'être assez similaire à DictionaryPlus, permettant d'échanger de façon transparente les deux types de données selon les besoins.
 *
 * MÉTHODES STATIQUE :
 * - concat : renvoie la concaténation des deux tableaux passés en paramètres.
 * - Dictionary2Array : transforme un DictionaryPlus en ArrayPlus. Attention, il y a perte d'informations !
*/

package Utilitaires
{
	public dynamic class ArrayPlus extends Array
	{
		/**
		 * Crée un nouveau ArrayPlus à partir des paramètres.
		 * @param ... Liste d'items à enregistrer
		 */
		public function ArrayPlus(... Items)
		{
			for each(var Item:* in Items)
				this.push(Item);
		}

		/**
		 * Ajoute un élément de façon unique dans le tableau.
		 * @param item L'élément à ajouter s'il n'es tpas déjà présent
		 */
		public function uniquePush(item:*):void
		{
			if(!this.contains(item))
				this.push(item);
		}

		/**
		 * Clone l'objet et renvoie une nouvelle occurrence d'ArrayPlus avec un contenu identique.
		 * @return Le clone de l'objet
		 */
		public function clone():ArrayPlus
		{
			var Bis:ArrayPlus=new ArrayPlus();
			for each(var i:* in this)
				Bis.push(i);

			return Bis;
		}

		/**
		 * Filtrer une partie des éléments du tableau selon une fonction de Callback.
		 * @param Callback Une fonction qui renvoie true si l'élément doit figurer dans le nouveau tableau, false sinon.
		 * @return Le tableau avec tous les éléments pour lesquels Callback vaut true.
		 */
		public function filtrer(Callback:Function):ArrayPlus
		{
			var Retour:ArrayPlus=new ArrayPlus();
			for each(var item:* in this)
			{
				if(Callback.call(this,item))
					Retour.push(item);
			}
			return Retour;
		}

		/**
		 * Déterminer si un élément appartient au tableau.
		 * @param item L'élement à tester
		 * @return true si présent, false sinon
		 */
		public function contains(item:*):Boolean
		{
			return (this.indexOf(item)!=-1)
		}

		/**
		 * Supprime un élément du tableau. Attention, ne le supprime qu'une fois s'il est présent en doublons ! Si l'élément n'est pas présent, une erreur est lancée.
		 * @param item L'élément à supprimer.
		 */
		public function remove(item:*):void
		{
			var id:int=this.indexOf(item);
			if(id!=-1)
				this.splice(id,1);
			else
				throw new Error("Suppression d'un item inexistant");
		}

		/**
		 * Remplace une occurrence d'un élément par un autre élément.
		 * @param search Élément à chercher
		 * @param replace Élément de remplacement
		 */
		public function replace(search:*,replace:*):void
		{
			var id:int=this.indexOf(search);
			if(id!=-1)
				this.splice(id,1,replace);
			else
				throw new Error("Remplacement d'un item inexistant");
		}

		/**
		 * Inverse la position de item avec la position de item2
		 * @param item Premier élément
		 * @param item2 Second élément
		 */
		public function swap(item:*,item2:*):void
		{
			var switcher:Object=new Object();
			replace(item,switcher);
			replace(item2,item);
			replace(switcher,item);
		}

		/**
		 * Renvoie tous les éléments contenus dans le tableau sous forme de String
		 * @return Liste concaténée par des sauts de ligne des éléments du tableau
		 */
		public function toString():String
		{
		var S:String="";
		for each(var item:* in this)
			S += item.toString() + "\n";
		return S;
		}


//STATIQUE

		/**
		 * Concatène les deux tableaux passés en paramètre et renvoie le résultat.
		 * @param a Le premier ArrayPlus
		 * @param b Le second ArrayPlus
		 * @return L'ArrayPlus contenant tous les éléments de a et de b.
		 */
		public static function concat(a:ArrayPlus,b:ArrayPlus):ArrayPlus
		{
			var retour:ArrayPlus=a.clone();
			for each(var items:* in b)
				retour.push(items);
			return retour;
		}

		/**
		 * Transforme un dictionnaire en Array. Attention, on perd de l'information (le nom de la clé)
		 * @param d Le dictionnaire à traduire en ArrayPlus
		 * @return L'ArrayPlus résultant de la traduction
		 */
		public static function dictionary2Array(d:DictionaryPlus):ArrayPlus
		{
			var Tableau:ArrayPlus=new ArrayPlus();
			for(var i:* in d)
				Tableau.push(d[i]);

			return Tableau;
		}
	}
}
</pre>	</div>


							</div>


<ul itemscope itemtype="https://schema.org/BreadcrumbList" class="breadcrumb">
			<li>
			You are here: &#160;
		</li>

				<li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
									<a itemprop="item" href="/" class="pathway"><span itemprop="name">Home</span></a>

									<span class="divider">
						<img src="/media/system/images/arrow.png" alt="" />					</span>
								<meta itemprop="position" content="1">
			</li>
					<li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
									<a itemprop="item" href="/autres-articles" class="pathway"><span itemprop="name">Articles du blog</span></a>

									<span class="divider">
						<img src="/media/system/images/arrow.png" alt="" />					</span>
								<meta itemprop="position" content="2">
			</li>
					<li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem" class="active">
				<span itemprop="name">
					Améliorer la classe Array en AS3				</span>
				<meta itemprop="position" content="3">
			</li>
		</ul>

					<!-- End Content -->
				</main>
									<div id="aside" class="span3">
						<!-- Begin Right Sidebar -->
						<div class="well _menu"><h3 class="page-header">Main Menu</h3><ul class="nav menu">
<li class="item-104 default"><a href="/" >Blog de Neamar</a></li><li class="item-103 current active"><a href="/autres-articles" >Articles du blog</a></li><li class="item-105"><a href="/les-liens-du-jeudi" >Les liens du jeudi</a></li></ul>
</div>
						<!-- End Right Sidebar -->
					</div>
							</div>
		</div>
	</div>
	<!-- Footer -->
	<footer class="footer" role="contentinfo">
		<div class="container">
			<hr />

			<p class="pull-right">
				<a href="#" id="back-top">
					Back to Top				</a>
			</p>
			<p>
				&copy; 2024 Blog de Neamar			</p>
		</div>
	</footer>

</body>
</html>
